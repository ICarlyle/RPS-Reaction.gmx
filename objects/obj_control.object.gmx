<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.set_scaleRes = 1;
global.set_phoneRes = 3; //act phone value is 5 (960 * 640)
global.WINDOW_WIDTH = 128;
global.WINDOW_HEIGHT = 192;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>key_up = keyboard_check_released(vk_up) || keyboard_check_released(ord('W'));
key_down = keyboard_check_released(vk_down) || keyboard_check_released(ord('S'));
key_enter = keyboard_check_released(vk_enter);


if (key_up){
    switch(object_get_name(selectedOption)){
        case "obj_newAdventure":
            selectedOption.image_index = 0;
            selectedOption = obj_continueAdventure;
            selectedOption.image_index = 1; 
            break;
        case "obj_continueAdventure":
            selectedOption.image_index = 0;
            selectedOption = obj_newAdventure;
            selectedOption.image_index = 1; 
            break;
              
    }
}
else if (key_down){
    switch(object_get_name(selectedOption)){
        case "obj_newAdventure":
            selectedOption.image_index = 0;
            selectedOption = obj_continueAdventure;
            selectedOption.image_index = 1; 
            break;
        case "obj_continueAdventure":
            selectedOption.image_index = 0;
            selectedOption = obj_newAdventure;
            selectedOption.image_index = 1; 
            break;
              
    }

}
//choose selected option
else if (key_enter){
    switch(object_get_name(selectedOption)){
        case "obj_newAdventure":
            room_goto(rm_level1);
            break;
        case "obj_continueAdventure":
            room_goto(rm_magneticSnare)   //Start a Game mode
            break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
